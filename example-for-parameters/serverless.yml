service: curso-algo

frameworkVersion: "2"

custom:
  tableName: "users-table-${self:provider.stage}"
  dynamodb:
    stages:
      - dev
    start:
      migrate: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: sa-east-1
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  create:
    handler: functions/create.handler
    events:
      - httpApi:
          path: /users/create
          method: post
  get:
    handler: functions/get-all.handler
    events:
      - httpApi:
          path: /users/get
          method: get
  get-one:
    handler: functions/get-one.handler
    events:
      - httpApi:
          path: /users/get/{id}
          method: get

resources:
  Resources:
    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
